{
  "name": "error",
  "version": "0.1.0",
  "description": "error handling utility",
  "keywords": [
    "error",
    "arch",
    "utility"
  ],
  "author": {
    "name": "Jake Verbaten",
    "email": "raynos2@gmail.com"
  },
  "main": "src/error",
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/error.git"
  },
  "engines": {
    "node": "0.6.x"
  },
  "dependencies": {
    "fcombine": "0.0.4"
  },
  "scripts": {
    "test": "node test/error-test.js"
  },
  "devDependencies": {
    "tester": "0.0.4"
  },
  "readme": "# error <a name=\"_error\" href=\"#_error\"><small><sup>link</sup></small></a>\r\n\r\nAn error handling utility,\r\n\r\n## Blog posts\r\n\r\ncoming soon!\r\n\r\n## Examples \r\n\r\n - [rest annotated code][1] Coming soon!\r\n\r\n## Documentation\r\n\r\nAnnotated source code coming soon.\r\n\r\n### error.throw(cb)\r\n\r\nReturns a function which will throw the first parameter if it exists\r\n\r\n\terror.throw(function (err, file) {\r\n\t\t// no error handling\r\n\t\t// error was thrown if exists\r\n\t\t// do things with file\r\n\t});\r\n\r\n### error.passTo(errorHandler, cb)\r\n\r\nReturns a function which will pass the error to the error handler if it exists\r\nand if not it will call the callback\r\n\r\n\terror.passTo(next, function (err, data) {\r\n\t\t// no error handling.\r\n\t\t// error was passed to next if exists\r\n\t\t// handle data\r\n\t});\r\n\r\n### error.thrower\r\n\r\nA simple function that will throw the first argument if it exists\r\n\r\n\terror.passTo(error.thrower, function (err, data) {\r\n\t\t// ...\r\n\t});\r\n\r\n### error.whitelist\r\n\r\nA whitelisting function. Pass it a filter and a cb and an optional error handler.\r\nIf the filter returns true then invoke the cb, if it returns false invoke the error handler. If it returns neither don't do anything\r\n\r\n\terror.whitelist(function (err) {\r\n\t\tif (err.isSpecial) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}, function (err, data) {\r\n\t\tif (err.isSpecial) {\r\n\t\t\thandleIt();\r\n\t\t} else {\r\n\t\t\thandle(data);\r\n\t\t}\r\n\t});\r\n\r\n   [1]: http://www.github.com/Raynos/rest",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Raynos/error/issues"
  },
  "_id": "error@0.1.0",
  "dist": {
    "shasum": "607b764a316b911fe3db8e09d202bf8ada766c48"
  },
  "_from": "error@",
  "_resolved": "https://registry.npmjs.org/error/-/error-0.1.0.tgz"
}
